{"version":3,"sources":["Components/Statistics/Statistics.styled.js","Components/Statistics/Statistics.js","Components/App.js","index.js"],"names":["StatisticsBtn","styled","button","StaticticsList","ul","SectionBox","section","Statistics","good","neutral","bad","setValue","total","positiveFeedback","Math","round","className","onClick","name","App","state","e","console","log","target","setState","prev","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8nBAEO,IAAMA,EAAgBC,IAAOC,OAAV,KAMbC,EAAiBF,IAAOG,GAAV,KAGdC,EAAaJ,IAAOK,QAAV,KCgDRC,EAvDI,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SACpCC,EAAQJ,EAAOC,EAAUC,EACzBG,EAAmBC,KAAKC,MAAOP,EAAOI,EAAS,KACnD,OACE,eAACP,EAAD,WACE,uDAEA,cAACL,EAAD,CAAegB,UAAU,WAAWC,QAASN,EAAUO,KAAK,OAA5D,kBAGA,cAAClB,EAAD,CAAeiB,QAASN,EAAUO,KAAK,UAAvC,qBAGA,cAAClB,EAAD,CAAeiB,QAASN,EAAUO,KAAK,MAAvC,iBAIA,4CACCV,EAAO,GAUJ,mDAA4BC,EAAU,GAUtC,mDAA4BC,EAAM,EAnBpC,eAACP,EAAD,WACE,wCAAWK,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYE,KACZ,qDACsBC,GAAsC,IAD5D,UAyBF,sDCzBOM,E,4MAvBbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,SAAW,SAAAU,GACTC,QAAQC,IAAIF,EAAEG,OAAON,MACrB,EAAKO,UAAS,SAAAC,GAAI,sBAAQL,EAAEG,OAAON,KAAOQ,EAAKL,EAAEG,OAAON,MAAQ,O,uDAIhE,OACE,cAAC,EAAD,CACEV,KAAMmB,KAAKP,MAAMZ,KACjBC,QAASkB,KAAKP,MAAMX,QACpBC,IAAKiB,KAAKP,MAAMV,IAChBC,SAAUgB,KAAKhB,e,GAlBLiB,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c13b29e5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StatisticsBtn = styled.button`\n  padding: 10px 20px;\n  margin: 15px;\n  font-size: 15px;\n  cursor: pointer;\n`;\nexport const StaticticsList = styled.ul`\n  list-style: none;\n`;\nexport const SectionBox = styled.section`\n  margin-left: 20px;\n`;\n","import React from 'react';\nimport { StatisticsBtn, StaticticsList, SectionBox } from './Statistics.styled';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, setValue }) => {\n  let total = good + neutral + bad;\n  let positiveFeedback = Math.round((good / total) * 100);\n  return (\n    <SectionBox>\n      <h2>Please leave feedback</h2>\n\n      <StatisticsBtn className=\"btn-good\" onClick={setValue} name=\"good\">\n        Good\n      </StatisticsBtn>\n      <StatisticsBtn onClick={setValue} name=\"neutral\">\n        Neutral\n      </StatisticsBtn>\n      <StatisticsBtn onClick={setValue} name=\"bad\">\n        Bad\n      </StatisticsBtn>\n\n      <h2>Statistics</h2>\n      {good > 0 ? (\n        <StaticticsList>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>\n            Positive feedback: {positiveFeedback ? positiveFeedback : '0'}%\n          </li>\n        </StaticticsList>\n      ) : <p>No feedback given</p> && neutral > 0 ? (\n        <StaticticsList>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>\n            Positive feedback: {positiveFeedback ? positiveFeedback : '0'}%\n          </li>\n        </StaticticsList>\n      ) : <p>No feedback given</p> && bad > 0 ? (\n        <StaticticsList>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>\n            Positive feedback: {positiveFeedback ? positiveFeedback : '0'}%\n          </li>\n        </StaticticsList>\n      ) : (\n        <p>No feedback given</p>\n      )}\n    </SectionBox>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import './App.css';\nimport Statistics from './Statistics/Statistics';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  setValue = e => {\n    console.log(e.target.name);\n    this.setState(prev => ({ [e.target.name]: prev[e.target.name] + 1 }));\n  };\n\n  render() {\n    return (\n      <Statistics\n        good={this.state.good}\n        neutral={this.state.neutral}\n        bad={this.state.bad}\n        setValue={this.setValue}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}